---
layout: post
date: 2024-04-09 12:00:00 +0200
title: "Integration with Google Calendar API"
---

# Overview of Google Calendar API Integration

LeadsCalendar integrates with the Google Calendar API to enable users to create events seamlessly within the application. The API provides functionalities for managing calendars, events, reminders, and access controls.

# Steps to Authenticate with Google and Obtain Necessary Credentials

To authenticate with the Google Calendar API and obtain the necessary credentials for LeadsCalendar, follow these steps:

1. **Create a Google Cloud Platform (GCP) Project:**
   - Go to the [Google Cloud Console](https://console.cloud.google.com/).
   - Create a new project specifically for LeadsCalendar.

2. **Enable Google Calendar API:**
   - In the Google Cloud Console, navigate to the "APIs & Services" > "Library" section.
   - Search for "Google Calendar API" and enable it for your project.

3. **Set Up OAuth 2.0 Credentials:**
   - In the Google Cloud Console, navigate to the "APIs & Services" > "Credentials" section.
   - Click on "Create credentials" and choose "OAuth client ID."
   - Select "Web application" as the application type.
   - Add authorized redirect URIs for local development (`http://localhost:4000/auth/google/callback` for Jekyll development server).
   - Save the OAuth client ID and client secret generated by Google.

4. **Configure `.env` File:**
   - Create a `.env` file in the root directory of your LeadsCalendar project.
   - Add the Google OAuth client ID and client secret to the `.env` file as follows:
     ```plaintext
     GOOGLE_CLIENT_ID=your_google_client_id
     GOOGLE_CLIENT_SECRET=your_google_client_secret
     ```

# Code Samples for Creating Events on Google Calendar

Here's an example code snippet in Ruby using the `google-api-client` gem to create an event on Google Calendar:

```ruby
require 'google/apis/calendar_v3'
require 'googleauth'

# Initialize Google Calendar API client
calendar = Google::Apis::CalendarV3::CalendarService.new
calendar.client_options.application_name = 'LeadsCalendar'
calendar.authorization = Google::Auth::ServiceAccountCredentials.make_creds(
  json_key_io: File.open('path/to/your/service_account_credentials.json'),
  scope: Google::Apis::CalendarV3::AUTH_CALENDAR
)

# Create event
event = Google::Apis::CalendarV3::Event.new(
  summary: 'New Event',
  start: Google::Apis::CalendarV3::EventDateTime.new(date_time: DateTime.now),
  end: Google::Apis::CalendarV3::EventDateTime.new(date_time: DateTime.now + 1.hour)
)
calendar.insert_event('primary', event)




